events {
    worker_connections 1024;
}

http {
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Rate limiting zone definition (must be in http block)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

    # Upstream configuration for load balancing
    upstream api_servers {
        # Docker Compose will automatically resolve multiple instances
        # when using docker-compose --scale mle-api=N
        server mle-api:8000 max_fails=3 fail_timeout=30s;
        
        # Load balancing method (round-robin by default)
        # least_conn; # Uncomment for least connections
        # ip_hash;    # Uncomment for session affinity
    }

    server {
        listen 80;
        server_name localhost;

        # Rate limiting (zone reference must be in server block)
        limit_req zone=api burst=20 nodelay;

        # Health check endpoint
        location /health {
            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Health check specific timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # API endpoints
        location / {
            proxy_pass http://api_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            
            # Error handling
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        # Status page for monitoring
        location /nginx_status {
            stub_status on;
            access_log off;
            # Allow access from host machine and localhost
            allow 127.0.0.1;
            allow 172.16.0.0/12;  # Docker network range
            allow 192.168.0.0/16; # Common local network range
            allow 10.0.0.0/8;     # Common local network range
            deny all;
        }
    }
}
